@inject NavigationManager NavigationManager

@if (this.servers != null && this.servers.Count > 0) {
	<ul>
		<Virtualize Items="this.servers" Context="server">
			<li @key="server.ServerId">
				@server.Name in @server.City is <span style="color: @(server.IsOnline ? "green" : "red")">@(server.IsOnline ? "online" : "offline")</span>
				&nbsp;
				<a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>

				&nbsp;
				<EditForm Enhance="true" Model="server" FormName="@($"form-server-{server.ServerId}")" OnValidSubmit="@(() => { DeleteServer(server.ServerId); })">
					<button type="submit" class="btn btn-primary">Delete</button>
				</EditForm>
			</li>
		</Virtualize>
	</ul>
}

@code {
	[Parameter]
	public string? CityName { get; set; }

	private List<Server>? servers;

	// This is called when the parameters are set with values
	protected override void OnParametersSet() {
		servers = ServersRepository.GetServerByCity(CityName?? "Toronto");
	}

	private void DeleteServer(int serverId) {
		if (serverId > 0) {
			ServersRepository.DeleteServer(serverId);
			NavigationManager.Refresh();
		}
	}
}
