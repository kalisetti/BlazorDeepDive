@inject NavigationManager NavigationManager

@if (Server != null) {
		<text>
		@Server.Name in @Server.City is <span style="color: @(Server.IsOnline ? "green" : "red")">@(Server.IsOnline ? "online" : "offline")</span>

		&nbsp;
		<a href="/Servers/@Server.ServerId" class="btn btn-link">Edit</a>
		&nbsp;
		@if (Server.IsOnline) {
			<button type="button"
				class="btn btn-outline-danger"
				@onclick="@(() => {Server.IsOnline = false; } )">
				Turn Off
			</button>
		}
		else {
			<button type="button"
					class="btn btn-outline-success"
					@onclick="@(() => {Server.IsOnline = true; } )">
				Turn On
			</button>
		}
		<EditForm Enhance="true" Model="Server" FormName="@($"form-Server-{Server.ServerId}")" OnValidSubmit="@(() => { DeleteServer(Server.ServerId); })">
			<button type="submit" class="btn btn-primary">Delete</button>
		</EditForm>
	</text>
}

@code {
	[Parameter]
	public Server? Server { get; set; }


	private void DeleteServer(int ServerId) {
		if (ServerId > 0) {
			ServersRepository.DeleteServer(ServerId);
			NavigationManager.NavigateTo("/Servers", true);
		}
	}
}
