@page "/servers/{id:int?}"

@inject NavigationManager NavigationManager

<h3>EditServer</h3>
<br />
<br />

@if (server != null) {
	<EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
		<DataAnnotationsValidator></DataAnnotationsValidator>
		<ValidationSummary></ValidationSummary>
		<InputNumber @bind-Value="server.ServerId" hidden></InputNumber>
		<FieldComponent Label="Name">
			<Control>
				<InputText @bind-Value="server.Name" class="form-control input-width"></InputText>
			</Control>
			<ValidationControl>
				<ValidationMessage For="() => server.Name"></ValidationMessage>
			</ValidationControl>
		</FieldComponent>

		<FieldComponent Label="City">
			<Control>
				<InputText @bind-Value="server.City" class="form-control input-width"></InputText>
			</Control>
			<ValidationControl>
				<ValidationMessage For="() => server.City"></ValidationMessage>
			</ValidationControl>
		</FieldComponent>

		<FieldComponent Label="Online">
			<Control>
				<InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
			</Control>
		</FieldComponent>

		<br/>
		<button class="btn btn-primary" type="submit">Update</button>
		&nbsp;
		<a href="/servers" class="btn btn-primary">Close</a>
	</EditForm>
}



@code {
	[Parameter]
	public int? Id { get; set; }

	[SupplyParameterFromForm(FormName ="formServer")]
	private Server? server { get; set; }

	protected override void OnParametersSet() {
		server ??= ServersRepository.GetServerById(this.Id);
	}

	private void Submit() {
		if (server != null) {
			ServersRepository.UpdateServer(server.ServerId, server);
		}

		NavigationManager.NavigateTo("/servers");
	}
}
