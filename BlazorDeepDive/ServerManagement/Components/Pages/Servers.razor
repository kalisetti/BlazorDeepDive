@page "/servers"
@rendermode InteractiveServer

@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />



<div class="container-fluid text-center">
	<div class="row">
		@foreach (var city in cities) {
			<div class="col">
				<div class="card @(selectedCity.Equals(city, StringComparison.OrdinalIgnoreCase) ? "border-primary": "")" style="width: 15rem;">
					<img src="@($"/images/{city}.jpg")" class="card-img-top" alt="@city" style="max-height: 8rem;">
					<div class="card-body">
						<button type="button" class="btn btn-primary" @onclick="@(() => { SelectCity(city); })">@city</button>
					</div>
				</div>
			</div>
		}
	</div>
</div>

<div class="input-group mb-3">
	<input type="text" class="form-control" placeholder="Search Servers" @bind-value="serverFilter" @bind-value:event="oninput"/>
	<button class="btn btn-outline-secondary" type="button" id="button-search" @onclick="HandleSearch">Search</button>
</div>

<br />
	<a href="/servers/add" class="btn btn-primary">Add Server</a>
<br />


<ServerListComponent @rendermode="InteractiveServer" CityName="@this.selectedCity"></ServerListComponent>

@code {
	private string selectedCity = "Perth";
	private List<string> cities = CitiesRepository.GetCities();
	

	private string _serverFilter = "";
	private string serverFilter {
		get => _serverFilter;
		set {
			_serverFilter = value;
			// do whatever you want here
			HandleSearch();
		}
	}

	

	private void SelectCity(string cityName) {
		this.selectedCity = cityName;
		//this.servers = ServersRepository.GetServerByCity(this.selectedCity);

		// Temporarily injecting 2000 servers
		// if (cityName == "Perth") {
		// 	for (int i = 16; i < 2000; i++) {
		// 		servers.Add(new Server { ServerId = i, Name = $"Server{i}", City = "Perth" });
		// 	}
		// }
	}

	// private void HandleServerFilterChange(ChangeEventArgs args) {
	// 	serverFilter = args.Value?.ToString() ?? string.Empty;
	// }

	private void HandleSearch() {
		//this.servers = ServersRepository.SearchServers(serverFilter);
		this.selectedCity = string.Empty;
	}
}
